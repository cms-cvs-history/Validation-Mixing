
process PRODVAL1  = {
   service = RandomNumberGeneratorService
   {
      PSet moduleSeeds = {
         untracked uint32 mix = 12345
      }
   }

        service = MessageLogger {
 		untracked vstring destinations = {"cout"}
		untracked PSet cout = {
			untracked PSet default = { untracked int32 limit = 0 }
		}
	} 

	source = PoolSource { 
#	untracked vstring fileNames = {'rfio:/castor/cern.ch/cms/store/RelVal/2006/12/16/RelVal120SingleEPt35/0000/D41C6AF5-588D-DB11-9E2D-0013D4C3BAFA.root'}
        untracked vstring fileNames = {'rfio:/castor/cern.ch/cms/store/RelVal/2007/7/11/RelVal-RelVal160pre4SingleEPt35-1184176348/0000/5EF3794C-7530-DC11-833F-000423D6C8EE.root'}
	}

        untracked PSet maxEvents = {untracked int32 input = 1}

	module out = PoolOutputModule {	
	        untracked string fileName = '/tmp/Cum_xxx.root'
                untracked vstring outputCommands =   {
                  "drop *_*_*_*",
                  "keep CrossingFrame*_*_*_*"
        	}
	}

# we want to have minbias file = signal event file
	module mix = MixingModule {
	       secsource input = PoolRASource  {
#	untracked vstring fileNames = {'rfio:/castor/cern.ch/cms/store/RelVal/2006/12/16/RelVal120SingleEPt35/0000/D41C6AF5-588D-DB11-9E2D-0013D4C3BAFA.root'}
#			       untracked vstring fileNames = {'file:../data/simevent.root'}
        untracked vstring fileNames = {'rfio:/castor/cern.ch/cms/store/RelVal/2007/7/11/RelVal-RelVal160pre4SingleEPt35-1184176348/0000/5EF3794C-7530-DC11-833F-000423D6C8EE.root'}

  			       string type = "fixed"
		               double averageNumber = 1
		               int32 minBunch = xxx
		               int32 maxBunch = xxx
			       int32 seed = 1234567
                               untracked uint32 maxEventsToSkip = 0
	       }
	       int32 bunchspace = 25
               string Label = ""
               untracked PSet maxEvents = {untracked int32 input = 1}
	}
	path p = { mix }
        endpath outpath = { out }
}
